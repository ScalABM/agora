simulation {

  seed = 42

  order-instructions {

    ask-order-probability = 0.5

    number = 1000000

  }

  order-issuers {

    trading-strategy {

      market-order-probability = 0.5

      minimum-ask-price = 1

      maximum-ask-price = 200

      minimum-ask-quantity = 1

      maximum-ask-quantity = 1

      minimum-bid-price = 1

      maximum-bid-price = 200

      minimum-bid-quantity = 1

      maximum-bid-quantity = 1

    }
  }

  tickers {

    initial-tick {

      ask-price = 50

      bid-price = 150

      price = 1

      quantity = 1

    }
  }

  tradables {

    number = 1000

    reference-price = 1

    symbol-length = 4

    tick = 1

  }

}

akka {

  log-dead-letters = "off"

  log-dead-letters-during-shutdown = "off"

  actor {

    deployment {

      # Model a Brokerage firm as a router.
      /brokerage {

        # The type of router determines how the brokerage distributes orders across its traders
        router = random-pool

        # The number of traders employed by our brokerage firm.
        nr-of-instances = 1000

        # The dispatcher controls the amount of parallelism/concurrency
        # pool-dispatcher {

        # fork-join-executor {

            # parallelism-min = 5

            # parallelism-max = 5

          # }
      }
    }
  }
}
